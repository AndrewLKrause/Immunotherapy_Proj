%This code will produce two matrices, M and Mn where:
%Mn(i,j) will be the number of feasible coexistence steady states which
%exist, and M(i,j) will be the number of feasible and stable coexistence
%steady states. These correspond to the parameters below with s1 = s1R(i)
%and s3 = s3R(j). TODO: UPDATED NOTATION


%Parameters
c = 0.25;
muu=0.167; pu=0.69167; gu=20;
rv=1;b=1;pv=0.5555556;gv=0.1;
pw=27.778;gw=0.001;muw=55.55556;

%Number of grid points in each direction of s1-s3:
N=100;

%Ranges of s1, s3
s1R = linspace(0,0.05,N);
s3R = linspace(0,100,N);

%M will store our stability values
M = zeros(N);
Mcf = ones(N);
Mn = zeros(N);

for i=1:N
    for j=1:N
        s1 = s1R(i);
        s3 = s3R(j);

        % Kinetic functions
        f = @(u,v,w)c*v-muu*u+pu*u.*w./(gu+w)+s1;
        g = @(u,v,w)rv*v.*(1-b*v)-pv*u.*v./(gv+v);
        h = @(u,v,w)pw*u.*v./(gw+v)-muw*w+s3;

        % Jacobian
        J = @(u,v,w)[-muu+pu.*w./(gu+w),     c,     -gu.*pu.*u./((gu+w).^2);...
            -pv.*v./(gv+v),      rv.*(1-2.*b.*v)-pv*gv*u./((gv+v).^2),   0;...
            pw*v./(gw+v),pw*gw*u./((gw+v).^2),-muw];
        Jcf = J(s1*(gu*muw+s3)/(muu*(gu*muw+s3)-pu*s3),0,s3/muw);
        %Compute coefficients for v equation
        c5 = -b^2*rv^2*pw*(-pu + muu)/pv;
        c4 = -2*rv*pw*((-pu + muu)*(b*gv - 1)*rv + c*pv/2)*b/pv;
        c3 = -rv*(pw*(b^2*gv^2 - 4*b*gv + 1)*(-pu + muu)*rv + pv*(b*c*pw*gv + (s1*pw + (-gu*muw - s3)*muu + s3*pu)*b - c*pw))/pv;
        c2 = (2*gv*pw*(-pu + muu)*(b*gv - 1)*rv^2 - (((s1*pw + (-gu*muw - s3)*muu + s3*pu)*b - c*pw)*gv - ((gu*muw + s3)*muu - s3*pu)*gw*b - s1*pw + (gu*muw + s3)*muu - s3*pu)*pv*rv + c*pv^2*(gu*muw + s3))/pv;
        c1 = (-gv^2*pw*(-pu + muu)*rv^2 + ((((gu*muw + s3)*muu - s3*pu)*gw*b + s1*pw + (-gu*muw - s3)*muu + s3*pu)*gv - ((gu*muw + s3)*muu - s3*pu)*gw)*pv*rv + pv^2*(gu*muw + s3)*(c*gw + s1))/pv;
        c0 = -gw*(((gu*muw + s3)*muu - s3*pu)*gv*rv - s1*pv*(gu*muw + s3));

        %Compute roots of quintic
        v_sols = roots([c5,c4,c3,c2,c1,c0]);
        %Only consider real roots
        v_sols(imag(v_sols) ~= 0) = [];
        %Only consider positive roots smaller than 1/b.
        v_sols(0 > v_sols) = []; v_sols(v_sols > 1/b) = [];
        Mn(i,j) = length(v_sols);

    
        %Check cancer-free stability
        if((muu*(gu*muw+s3)-pu*s3)<0)
            Mcf(i,j) = -1;
        elseif(max(real(eigs(Jcf)))>0)
            Mcf(i,j) = 0;
        else
        
        end

        %If no roots are found, set M_ij = 0.
        if(isempty(v_sols))
            M(i,j) = 0; %Interpret this as an infeasible/nonexistence state.
        else
            %Loop over each root found.
            for vss = v_sols'
                %Compute the values of u and w at steady state.
                uss = -rv*(b*vss - 1)*(gv + vss)/pv;
                wss = (pw*uss*vss + gw*s3 + s3*vss)/((gw + vss)*muw);

                %Check if there is an error in feasibility analysis.
                if(uss < -1e-14 || wss < -1e-14)
                    "Warning: error in feasibility analysis!"
                    M(i,j) = -1;
                    s1
                    s3
                else
                    %Compute if any instability occurs - if so, leave value 
                    %of M_Ij unchanged 
                    if(max(real(eigs(J(uss,vss,wss))))>0)
                        M(i,j) = M(i,j) + 0;

                    %If no instability occurs, then this steady state is
                    %stable so add 1 to M_ij
                    else
                        M(i,j)=M(i,j) + 1;
                    end
                end
            end
        end
    end
end

%Bad plotting code
close all;
figure;

%Number of feasible steady states - x axis is s1R, y axis is s3R
imagesc(flipud(Mn'))
colorbar;
xlabel('$s_u$','interpreter','latex')
ylabel('$s_u$','interpreter','latex')
ax = gca; set(ax,'Fontsize',16);
ax.XTick = [1, ax.XTick];
ax.XTickLabel = s1R(ax.XTick);
ax.YTick = [1, ax.YTick];
ax.YTickLabel = flip(s3R((ax.YTick)));
title('# of feasible steady states')


figure

%Number of feasible+stable coexistence steady states - x axis is s1R, y axis is s3R
imagesc(flipud(M'))
colorbar;
xlabel('$s_u$','interpreter','latex')
ylabel('$s_u$','interpreter','latex')
ax = gca; set(ax,'Fontsize',16);
ax.XTick = [1, ax.XTick];
ax.XTickLabel = s1R(ax.XTick);
ax.YTick = [1, ax.YTick];
ax.YTickLabel = flip(s3R((ax.YTick)));
title('# of feasible+stable COEXISTENCE steady states')

figure

%Number of feasible+stable cancer free steady states - x axis is s1R, y axis is s3R
imagesc(flipud(Mcf'))
colorbar;
xlabel('$s_u$','interpreter','latex')
ylabel('$s_w$','interpreter','latex')
ax = gca; set(ax,'Fontsize',16);
ax.XTick = [1, ax.XTick];
ax.XTickLabel = s1R(ax.XTick);
ax.YTick = [1, ax.YTick];
ax.YTickLabel = flip(s3R((ax.YTick)));
title('# of feasible+stable CANCER-FREE steady states')


